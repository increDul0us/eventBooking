{"version":3,"sources":["context/auth-context.js","pages/Auth.js","components/Spinner/Spinner.js","components/Bookings/BookingList/BookingList.js","components/Bookings/BookingsChart/BookingsChart.js","components/Bookings/BookingsControls/BookingsControls.js","pages/Bookings.js","components/Modal/Modal.js","components/Backdrop/Backdrop.js","components/Events/EventList/EventItem/EventItem.js","components/Events/EventList/EventList.js","pages/Events.js","components/Navigation/MainNavigation.js","App.js","index.js"],"names":["React","createContext","token","userId","login","tokenExpiration","logout","AuthPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLogin","switchModeHandler","setState","prevState","submitHandler","event","preventDefault","email","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","Content-Type","then","res","status","Error","json","resData","data","context","catch","err","console","log","createRef","react_default","a","createElement","className","onSubmit","htmlFor","type","id","ref","onClick","Component","contextType","AuthContext","spinner","bookingList","bookings","map","booking","key","_id","title","Date","createdAt","toLocaleDateString","onDelete","bind","BOOKINGS_BUCKETS","Cheap","min","max","Normal","Expensive","bookingsChart","chartData","labels","datasets","values","_loop","bucket","filteredBookingsCount","reduce","prev","price","push","fillColor","strokeColor","highlightFill","highlightStroke","toConsumableArray","style","textAlign","react_chartjs","bookingsControl","activeOutputType","onChange","BookingsPage","isLoading","outputType","fetchBookings","Authorization","deleteBookingHandler","bookingId","filter","changeOutputTypeHandler","content","Spinner_Spinner","Fragment","BookingsControls_BookingsControls","BookingList_BookingList","BookingsChart","modal","children","canCancel","onCancel","canConfirm","onConfirm","confirmText","backdrop","eventItem","eventId","date","creatorId","onDetail","eventList","events","EventItem_EventItem","authUserId","creator","onViewDetail","EventsPage","creating","selectedEvent","isActive","startCreateEventHandler","modalConfirmHandler","titleElRef","priceElRef","dateElRef","description","descriptionElRef","desc","updatedEvents","createEvent","modalCancelHandler","showDetailHandler","find","e","bookEventHandler","fetchEvents","_this2","Backdrop_Backdrop","Modal_Modal","rows","EventList_EventList","mainNavigation","auth_context","Consumer","NavLink","to","App","BrowserRouter","Provider","Navigation_MainNavigation","Switch","Redirect","from","exact","Route","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d8d2f549.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({\n    token: null,\n    userId: null,\n    login: (token, userId, tokenExpiration) => {},\n    logout: () => {}\n});","import React, { Component } from 'react';\n\nimport './Auth.css';\nimport AuthContext from '../context/auth-context';\n\nclass AuthPage extends Component {\n  state = {\n    isLogin: true\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.emailEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n\n  switchModeHandler = () => {\n    this.setState(prevState => {\n      return { isLogin: !prevState.isLogin };\n    });\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    const email = this.emailEl.current.value;\n    const password = this.passwordEl.current.value;\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    }\n\n    let requestBody = {\n      query: `\n        query Login($email: String!, $password: String!) {\n          login(email: $email, password: $password) {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `,\n      variables: {\n        email: email,\n        password: password\n      }\n    };\n\n    if (!this.state.isLogin) {\n      requestBody = {\n        query: `\n          mutation CreateUser($email: String!, $password: String!) {\n            createUser(userInput: {email: $email, password: $password}) {\n              _id\n              email\n            }\n          }\n        `,\n        variables: {\n          email: email,\n          password: password\n        }\n      };\n    }\n\n    fetch('/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.data.login.token) {\n          this.context.login(\n            resData.data.login.token,\n            resData.data.login.userId,\n            resData.data.login.tokenExpiration\n          );\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"email\">E-Mail</label>\n          <input type=\"email\" id=\"email\" ref={this.emailEl} />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" ref={this.passwordEl} />\n        </div>\n        <div className=\"form-actions\">\n          <button type=\"submit\">Submit</button>\n          <button type=\"button\" onClick={this.switchModeHandler}>\n            Switch to {this.state.isLogin ? 'Signup' : 'Login'}\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default AuthPage;\n","import React from 'react';\n\nimport './Spinner.css';\n\nconst spinner = () => (\n  <div className=\"spinner\">\n    <div className=\"lds-dual-ring\" />\n  </div>\n);\n\nexport default spinner;\n","import React from 'react';\n\nimport './BookingList.css';\n\nconst bookingList = props => (\n  <ul className=\"bookings__list\">\n    {props.bookings.map(booking => {\n      return (\n        <li key={booking._id} className=\"bookings__item\">\n          <div className=\"bookings__item-data\">\n            {booking.event.title} -{' '}\n            {new Date(booking.createdAt).toLocaleDateString()}\n          </div>\n          <div className=\"bookings__item-actions\">\n            <button className=\"btn\" onClick={props.onDelete.bind(this, booking._id)}>Cancel</button>\n          </div>\n        </li>\n      );\n    })}\n  </ul>\n);\n\nexport default bookingList;\n","import React from 'react';\nimport { Bar as BarChart } from 'react-chartjs';\n\nconst BOOKINGS_BUCKETS = {\n  Cheap: {\n    min: 0,\n    max: 20\n  },\n  Normal: {\n    min: 20,\n    max: 100\n  },\n  Expensive: {\n    min: 100,\n    max: 1000\n  }\n};\n\nconst bookingsChart = props => {\n  const chartData = { labels: [], datasets: [] };\n  let values = [];\n  for (const bucket in BOOKINGS_BUCKETS) {\n    const filteredBookingsCount = props.bookings.reduce((prev, current) => {\n      if (\n        current.event.price > BOOKINGS_BUCKETS[bucket].min &&\n        current.event.price < BOOKINGS_BUCKETS[bucket].max\n      ) {\n        return prev + 1;\n      } else {\n        return prev;\n      }\n    }, 0);\n    values.push(filteredBookingsCount);\n    chartData.labels.push(bucket);\n    chartData.datasets.push({\n      // label: \"My First dataset\",\n      fillColor: 'rgba(220,220,220,0.5)',\n      strokeColor: 'rgba(220,220,220,0.8)',\n      highlightFill: 'rgba(220,220,220,0.75)',\n      highlightStroke: 'rgba(220,220,220,1)',\n      data: values\n    });\n    values = [...values];\n    values[values.length - 1] = 0;\n  }\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <BarChart data={chartData} />\n    </div>\n  );\n};\n\nexport default bookingsChart;\n","import React from 'react';\n\nimport './BookingsControls.css';\n\nconst bookingsControl = props => {\n  return (\n    <div className=\"bookings-control\">\n      <button\n        className={props.activeOutputType === 'list' ? 'active' : ''}\n        onClick={props.onChange.bind(this, 'list')}\n      >\n        List\n      </button>\n      <button\n        className={props.activeOutputType === 'chart' ? 'active' : ''}\n        onClick={props.onChange.bind(this, 'chart')}\n      >\n        Chart\n      </button>\n    </div>\n  );\n};\n\nexport default bookingsControl;\n","import React, { Component } from 'react';\n\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport BookingList from '../components/Bookings/BookingList/BookingList';\nimport BookingsChart from '../components/Bookings/BookingsChart/BookingsChart';\nimport BookingsControls from '../components/Bookings/BookingsControls/BookingsControls';\n\nclass BookingsPage extends Component {\n  state = {\n    isLoading: false,\n    bookings: [],\n    outputType: 'list'\n  };\n\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    this.fetchBookings();\n  }\n\n  fetchBookings = () => {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query {\n            bookings {\n              _id\n             createdAt\n             event {\n               _id\n               title\n               date\n               price\n             }\n            }\n          }\n        `\n    };\n\n    fetch('/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const bookings = resData.data.bookings;\n        this.setState({ bookings: bookings, isLoading: false });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ isLoading: false });\n      });\n  };\n\n  deleteBookingHandler = bookingId => {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          mutation CancelBooking($id: ID!) {\n            cancelBooking(bookingId: $id) {\n            _id\n             title\n            }\n          }\n        `,\n      variables: {\n        id: bookingId\n      }\n    };\n\n    fetch('/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState(prevState => {\n          const updatedBookings = prevState.bookings.filter(booking => {\n            return booking._id !== bookingId;\n          });\n          return { bookings: updatedBookings, isLoading: false };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ isLoading: false });\n      });\n  };\n\n  changeOutputTypeHandler = outputType => {\n    if (outputType === 'list') {\n      this.setState({ outputType: 'list' });\n    } else {\n      this.setState({ outputType: 'chart' });\n    }\n  };\n\n  render() {\n    let content = <Spinner />;\n    if (!this.state.isLoading) {\n      content = (\n        <React.Fragment>\n          <BookingsControls\n            activeOutputType={this.state.outputType}\n            onChange={this.changeOutputTypeHandler}\n          />\n          <div>\n            {this.state.outputType === 'list' ? (\n              <BookingList\n                bookings={this.state.bookings}\n                onDelete={this.deleteBookingHandler}\n              />\n            ) : (\n              <BookingsChart bookings={this.state.bookings} />\n            )}\n          </div>\n        </React.Fragment>\n      );\n    }\n    return <React.Fragment>{content}</React.Fragment>;\n  }\n}\n\nexport default BookingsPage;\n","import React from 'react';\n\nimport './Modal.css';\n\nconst modal = props => (\n  <div className=\"modal\">\n    <header className=\"modal__header\">\n      <h1>{props.title}</h1>\n    </header>\n    <section className=\"modal__content\">{props.children}</section>\n    <section className=\"modal__actions\">\n      {props.canCancel && (\n        <button className=\"btn\" onClick={props.onCancel}>\n          Cancel\n        </button>\n      )}\n      {props.canConfirm && (\n        <button className=\"btn\" onClick={props.onConfirm}>\n          {props.confirmText}\n        </button>\n      )}\n    </section>\n  </div>\n);\n\nexport default modal;\n","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = props => <div className=\"backdrop\"></div>;\n\nexport default backdrop;","import React from 'react';\n\nimport './EventItem.css';\n\nconst eventItem = props => (\n  <li key={props.eventId} className=\"events__list-item\">\n    <div>\n      <h1>{props.title}</h1>\n      <h2>\n        ${props.price} - {new Date(props.date).toLocaleDateString()}\n      </h2>\n    </div>\n    <div>\n      {props.userId === props.creatorId ? (\n        <p>Your the owner of this Show.</p>\n      ) : (\n        <button className=\"btn\" onClick={props.onDetail.bind(this, props.eventId)}>\n          View Details\n        </button>\n      )}\n    </div>\n  </li>\n);\n\nexport default eventItem;\n","import React from 'react';\n\nimport EventItem from './EventItem/EventItem';\nimport './EventList.css';\n\nconst eventList = props => {\n  const events = props.events.map(event => {\n    return (\n      <EventItem\n        key={event._id}\n        eventId={event._id}\n        title={event.title}\n        price={event.price}\n        date={event.date}\n        userId={props.authUserId}\n        creatorId={event.creator._id}\n        onDetail={props.onViewDetail}\n      />\n    );\n  });\n\n  return <ul className=\"event__list\">{events}</ul>;\n};\n\nexport default eventList;\n","import React, { Component } from 'react';\n\nimport Modal from '../components/Modal/Modal';\nimport Backdrop from '../components/Backdrop/Backdrop';\nimport EventList from '../components/Events/EventList/EventList';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport './Events.css';\n\nclass EventsPage extends Component {\n  state = {\n    creating: false,\n    events: [],\n    isLoading: false,\n    selectedEvent: null\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.titleElRef = React.createRef();\n    this.priceElRef = React.createRef();\n    this.dateElRef = React.createRef();\n    this.descriptionElRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n  }\n\n  startCreateEventHandler = () => {\n    this.setState({ creating: true });\n  };\n\n  modalConfirmHandler = () => {\n    this.setState({ creating: false });\n    const title = this.titleElRef.current.value;\n    const price = +this.priceElRef.current.value;\n    const date = this.dateElRef.current.value;\n    const description = this.descriptionElRef.current.value;\n\n    if (\n      title.trim().length === 0 ||\n      price <= 0 ||\n      date.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n      return;\n    }\n\n    const event = { title, price, date, description };\n    console.log(event);\n\n    const requestBody = {\n      query: `\n          mutation CreateEvent($title: String!, $desc: String!, $price: Float!, $date: String!) {\n            createEvent(eventInput: {title: $title, description: $desc, price: $price, date: $date}) {\n              _id\n              title\n              description\n              date\n              price\n            }\n          }\n        `,\n        variables: {\n          title: title,\n          desc: description,\n          price: price,\n          date: date\n        }\n    };\n\n    const token = this.context.token;\n\n    fetch('/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState(prevState => {\n          const updatedEvents = [...prevState.events];\n          updatedEvents.push({\n            _id: resData.data.createEvent._id,\n            title: resData.data.createEvent.title,\n            description: resData.data.createEvent.description,\n            date: resData.data.createEvent.date,\n            price: resData.data.createEvent.price,\n            creator: {\n              _id: this.context.userId\n            }\n          });\n          return { events: updatedEvents };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, selectedEvent: null });\n  };\n\n  fetchEvents() {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query {\n            events {\n              _id\n              title\n              description\n              date\n              price\n              creator {\n                _id\n                email\n              }\n            }\n          }\n        `\n    };\n\n    fetch('/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const events = resData.data.events;\n        if (this.isActive) {\n          this.setState({ events: events, isLoading: false });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  showDetailHandler = eventId => {\n    this.setState(prevState => {\n      const selectedEvent = prevState.events.find(e => e._id === eventId);\n      return { selectedEvent: selectedEvent };\n    });\n  };\n\n  bookEventHandler = () => {\n    if (!this.context.token) {\n      this.setState({ selectedEvent: null });\n      return;\n    }\n    console.log(this.state.selectedEvent)\n    const requestBody = {\n      query: `\n          mutation BookEvent($id: ID!) {\n            bookEvent(eventId: $id) {\n              _id\n             createdAt\n             updatedAt\n            }\n          }\n        `,\n        variables: {\n          id: this.state.selectedEvent._id\n        }\n    };\n\n    fetch('/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.setState({ selectedEvent: null });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {(this.state.creating || this.state.selectedEvent) && <Backdrop />}\n        {this.state.creating && (\n          <Modal\n            title=\"Add Movie Show\"\n            canCancel\n            canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.modalConfirmHandler}\n            confirmText=\"Confirm\"\n          >\n            <form>\n              <div className=\"form-control\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" id=\"title\" ref={this.titleElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"price\">Price</label>\n                <input type=\"number\" id=\"price\" ref={this.priceElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"date\">Date</label>\n                <input type=\"datetime-local\" id=\"date\" ref={this.dateElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"description\">Description</label>\n                <textarea\n                  id=\"description\"\n                  rows=\"4\"\n                  ref={this.descriptionElRef}\n                />\n              </div>\n            </form>\n          </Modal>\n        )}\n        {this.state.selectedEvent && (\n          <Modal\n            title={this.state.selectedEvent.title}\n            canCancel\n            canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.bookEventHandler}\n            confirmText={this.context.token ? 'Purchase' : 'Confirm'}\n          >\n            <h1>{this.state.selectedEvent.title}</h1>\n            <h2>\n              ${this.state.selectedEvent.price} -{' '}\n              {new Date(this.state.selectedEvent.date).toLocaleDateString()}\n            </h2>\n            <p>{this.state.selectedEvent.description}</p>\n          </Modal>\n        )}\n        {this.context.token && (\n          <div className=\"events-control\">\n            <p>Share your own Show!</p>\n            <button className=\"btn\" onClick={this.startCreateEventHandler}>\n              Create Movie Show\n            </button>\n          </div>\n        )}\n        {this.state.isLoading ? (\n          <Spinner />\n        ) : (\n          <EventList\n            events={this.state.events}\n            authUserId={this.context.userId}\n            onViewDetail={this.showDetailHandler}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EventsPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport AuthContext from '../../context/auth-context';\nimport './MainNavigation.css';\n\nconst mainNavigation = props => (\n  <AuthContext.Consumer>\n    {context => {\n      return (\n        <header className=\"main-navigation\">\n          <div className=\"main-navigation__logo\">\n              <h1>MovieTick</h1>\n          </div>\n          <nav className=\"main-navigation__items\">\n            <ul>\n              {!context.token && (\n                <li>\n                  <NavLink to=\"/auth\">Authenticate</NavLink>\n                </li>\n              )}\n              <li>\n                <NavLink to=\"/events\">Shows</NavLink>\n              </li>\n              {context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/bookings\">Bookings</NavLink>\n                  </li>\n                  <li>\n                    <button onClick={context.logout}>Logout</button>\n                  </li>\n                </React.Fragment>\n              )}\n            </ul>\n          </nav>\n        </header>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport AuthPage from './pages/Auth';\nimport BookingsPage from './pages/Bookings';\nimport EventsPage from './pages/Events';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    userId: null\n  };\n\n  login = (token, userId, tokenExpiration) => {\n    this.setState({ token: token, userId: userId });\n  };\n\n  logout = () => {\n    this.setState({ token: null, userId: null });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              userId: this.state.userId,\n              login: this.login,\n              logout: this.logout\n            }}\n          >\n            <MainNavigation />\n            <main className=\"main-content\">\n              <Switch>\n                {this.state.token && <Redirect from=\"/\" to=\"/events\" exact />}\n                {this.state.token && (\n                  <Redirect from=\"/auth\" to=\"/events\" exact />\n                )}\n                {!this.state.token && (\n                  <Route path=\"/auth\" component={AuthPage} />\n                )}\n                <Route path=\"/events\" component={EventsPage} />\n                {this.state.token && (\n                  <Route path=\"/bookings\" component={BookingsPage} />\n                )}\n                {!this.state.token && <Redirect to=\"/auth\" exact />}\n              </Switch>\n            </main>\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}